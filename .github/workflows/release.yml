name: Release App

on:
  workflow_dispatch:
    inputs:
      release-track:
        type: choice
        description: Release environment
        options:
          - internal
          - alpha
          - production
        default: internal
      whats-new:
        type: string
        description: What's new text for Play Store (supports escape chars)
        # Don't shame me, this is in case I really have nothing new to write :)
        default: Nova versão com melhorias funcionais.
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - android/**
      - assets/**
      - lib/**
      - .releaserc
      - pubspec.yaml
      - pubspec.lock

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions:
  contents: write

env:
  RELEASE_TRACK: ${{ github.event_name == 'push' && 'internal' || inputs.release-track }}

jobs:
  debug:
    runs-on: ubuntu-latest
    name: Show input values
    steps:
      - name: Show input values
        env:
          EVENT_NAME: ${{ github.event_name }}
          INPUTS: ${{ toJSON(inputs) }}
        run: |
          echo "event-name: $EVENT_NAME"
          echo "inputs: $INPUTS"

  version:
    name: Get new version
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Ensure release is not for production on regular branch
        run: exit 1
        if: ${{ env.RELEASE_TRACK == 'production' && github.ref != 'refs/heads/main' }}

      - uses: actions/checkout@v4

      - name: 🚚 - Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic-release
        with:
          dry_run: true
          extra_plugins: |
            semantic-release-replace-plugin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - uses: actions/checkout@v4

      - name: 📩 - Retrieve the build signature secrets
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          echo -ne "$KEYSTORE" | base64 --decode > android/pessoa-pensadora.jks && \
          echo "$KEY_PROPERTIES" > android/key.properties

      - name: 💎 - Install Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: '3.x'
          channel: 'stable'

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      # Google Play requires version code (int) to increment on every release
      - name: 🔧 - Prepare release
        run: |
          versionCode=$(date '+%y%m%d%H')
          sed -i -e "s/version: .*/version: ${{ needs.version.outputs.new-version }}+$versionCode/g" pubspec.yaml 

      - name: 🌱 - Get dependencies
        run: cat pubspec.yaml && echo && flutter pub get

      - name: 🔨 - Build app bundle
        run: |
          flutter build appbundle --release --flavor prod

      - name: 🧹 - Cleanup
        run: |
          rm android/pessoa-pensadora.jks android/key.properties
          mv build/app/outputs/bundle/prodRelease/app-prod-release.aab PessoaPensadora.aab

      - name: 📦 - Copy App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: PessoaPensadora.aab
          path: PessoaPensadora.aab
          if-no-files-found: error

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-latest
    # GitHub releases are meant only for production releases,
    # otherwise I would need to delete the release made in the internal track to release to prod
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && inputs.release-track == 'production' }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: 📦 - Copy server artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - name: 🧐 - Display structure of downloaded artifacts
        run: ls -R artifacts/

      - name: 🚚 - Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            semantic-release-replace-plugin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-google-play:
    name: Publish to Google Play
    needs: [build, release]
    runs-on: ubuntu-latest
    # Publishing to Play Store even with no GitHub Release
    # for internal releases (prod check is done in the `version` job)
    if: ${{ !cancelled() && needs.build.result == 'success' }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: 'actions/checkout@v4'

      - name: 📦 - Copy server artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/${{ vars.GCP_WORKLOAD_IDENTITY_POOL }}/providers/${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

      - name: 🔧 - Print release notes
        run: |
          mkdir releaseNotes/
          echo -ne "${{ inputs.whats-new }}" > releaseNotes/whatsnew-pt-PT

      - name: 🚀 - Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ steps.auth.outputs.credentials_file_path }}
          packageName: me.l3n.pessoapensadora.pessoa_pensadora
          releaseFiles: artifacts/PessoaPensadora.aab
          track: ${{ env.RELEASE_TRACK }}
          whatsNewDirectory: releaseNotes/

  publish-to-github-pages:
    name: Publish to GitHub Pages
    needs: [version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4

      - name: 💎 - Install Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: '3.x'
          channel: 'stable'

      - name: 🌱 - Get dependencies
        run: cat pubspec.yaml && echo && flutter pub get

      - name: 🔨 - Build web
        run: |
          flutter build web --release

      - name: 🔧- Setup Pages
        uses: actions/configure-pages@v5

      - name: 📦 - Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/web'

      - name: 🚀 - Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
